{"version":3,"file":"component---src-pages-projects-tsx-ffce7afe3b793b5cfffa.js","mappings":"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","sources":["webpack://woojiahao.github.io/./src/components/BackToTop.tsx","webpack://woojiahao.github.io/./src/components/Layout/Footer.tsx","webpack://woojiahao.github.io/./src/components/Layout/Layout.tsx","webpack://woojiahao.github.io/./src/pages/projects.tsx"],"sourcesContent":["import React, { useEffect } from \"react\"\nimport { AiOutlineArrowUp } from \"react-icons/all\"\n\nconst BackToTop = () => {\n  useEffect(() => {\n    window.addEventListener('scroll', () => {\n      const arrow = document.querySelector('.arrow')\n      if (arrow) {\n        window.scrollY ? arrow.classList.remove('invisible') : arrow.classList.add('invisible')\n      }\n    })\n  }, [])\n\n  const onClick = () => {\n    document.body.scrollTop = 0\n    document.documentElement.scrollTop = 0\n  }\n\n  return (\n    <div\n      className=\"invisible arrow fixed bottom-0 right-0 inline-flex rounded-sm pt-2 pr-4 pb-4 pl-2 hover:cursor-pointer md:invisible\"\n      onClick={onClick} >\n      < AiOutlineArrowUp size=\"1.75em\" />\n    </div>\n  )\n}\n\nexport default BackToTop","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport { AiFillGithub, AiFillLinkedin, AiFillTwitterSquare, FaRssSquare } from \"react-icons/all\"\nimport { MdEmail } from \"react-icons/md\"\nimport { SiDiscord } from \"react-icons/si\"\nimport ContactLink from \"../ContactLink\"\n\ninterface FooterProps {\n  repositoryUrl: string\n}\n\nconst Footer = ({ repositoryUrl }: FooterProps) => {\n  const contactIconClasses = [\n    'lg:w-12',\n    'lg:h-12',\n    'lg:m-0',\n    'lg:mr-2'\n  ].join(' ')\n\n  return (\n    <footer>\n      <div className=\"flex justify-between w-full md:flex-col md:mb-5\">\n        <div className=\"basis-left min-w-30p md:mb-5\">\n          <p className=\"m-0 p-0\">A Programmer's Perspective</p>\n\n          <br />\n\n          <p className=\"m-0 p-0\">\n            Trekking down the path of programming and discussing my encounters with the unknown!\n          </p>\n\n          <br />\n\n          <p className=\"m-0 p-0\">\n            Copyright &copy; 2020-2022. Code <a href={repositoryUrl}>here.</a>\n          </p>\n        </div>\n\n        {/* TODO: Abstract to separate component */}\n        <div className=\"w-full basis-left flex md:mb-5\">\n          <div className=\"page-navigation basis-1 min-w-50p md:mb-5\">\n            <p className=\"font-bold m-0 p-0 mb-4\">Navigation</p>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/blog\">Blog</Link>\n            <Link to=\"/projects\">Projects</Link>\n            <Link to=\"/about\">About Me</Link>\n            <a href=\"https://www.notion.so/woojiahao/48b21a97d71c4cd2bc9a9051bd7423a3?v=e2c493015ceb47cfa275a03f20895cb1\">Recommendations</a>\n          </div>\n\n          {/* TODO: Abstract to separate component */}\n          <div className=\"basis-1 min-w-50p md:mb-5\">\n            <p className=\"social-media font-bold m-0 p-0 mb-4\">Connect with me!</p>\n            <ContactLink align=\"left\" link=\"https://github.com/woojiahao\" icon={<AiFillGithub className={contactIconClasses} />}>woojiahao</ContactLink>\n            <ContactLink align=\"left\" link=\"https://discord.gg/sgexams\" icon={<SiDiscord className={contactIconClasses} />}>@Chill#4048</ContactLink>\n            <ContactLink align=\"left\" link=\"https://www.linkedin.com/in/jia-hao-woo-089346155/\" icon={<AiFillLinkedin className={contactIconClasses} />}>Woo Jia Hao</ContactLink>\n            <ContactLink align=\"left\" link=\"https://twitter.com/woojiahao_\" icon={<AiFillTwitterSquare className={contactIconClasses} />}>@woojiahao_</ContactLink>\n            <ContactLink align=\"left\" link=\"mailto: woojiahao1234@gmail.com\" icon={<MdEmail className={contactIconClasses} />}>woojiahao1234@gmail.com</ContactLink>\n            <ContactLink align=\"left\" link=\"/rss.xml\" icon={<FaRssSquare className={contactIconClasses} />}>Blog RSS Feed</ContactLink>\n          </div>\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer","import { graphql, Link, useStaticQuery } from \"gatsby\"\nimport React, { PropsWithChildren } from \"react\"\nimport BackToTop from \"../BackToTop\"\nimport SEO from \"../SEO\"\nimport ThemeToggle from \"../ThemeToggle\"\nimport Footer from \"./Footer\"\n\ninterface LayoutProps {\n  tabTitle: string\n  pageTitle: string\n  pagination?: { currentPage: number, numPages: number }\n  tags?: string[]\n  description?: string\n  backToTop?: boolean\n}\n\nconst Layout = ({\n  tabTitle,\n  pageTitle,\n  pagination,\n  tags = [],\n  children,\n  description,\n  backToTop\n}: PropsWithChildren<LayoutProps>) => {\n  const { site } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          repositoryUrl\n        }\n      }\n    }\n  `)\n\n  const {\n    title: siteTitle,\n    repositoryUrl\n  } = site.siteMetadata\n\n  return (\n    <div>\n      <div className=\"my-12 mx-auto max-w-layout-max xl:max-w-layout-xl md:max-w-layout-md sm:max-w-layout-sm xs:max-w-layout-xs xxs:max-w-layout-xxs\">\n        <ThemeToggle />\n        <SEO title={tabTitle} description={description} tags={tags} />\n\n        <header className=\"flex items-center justify-items-center justify-between md:flex-col md:items-center md:justify-center\">\n          <Link to=\"/\">\n            <h3 className=\"m-0 p-0 text-text\">{siteTitle}</h3>\n          </Link>\n          <nav className=\"self-end justify-self-end md:self-center md:justify-self-center\">\n            <Link to=\"/blog\">Blog</Link>\n            <Link to=\"/projects\">Projects</Link>\n            <Link to=\"/about\">About Me</Link>\n            <a href=\"https://www.notion.so/woojiahao/48b21a97d71c4cd2bc9a9051bd7423a3?v=e2c493015ceb47cfa275a03f20895cb1\">Recommendations</a>\n          </nav>\n        </header>\n\n        <div className=\"flex justify-between items-center\">\n          <h1>{pageTitle}</h1>\n          {pagination &&\n            <p className=\"mt-8\">\n              Page {pagination.currentPage}/{pagination.numPages}\n            </p>\n          }\n        </div>\n\n        <div className=\"mb-8\">\n          {children}\n        </div>\n\n        <Footer repositoryUrl={repositoryUrl} />\n      </div>\n\n      {backToTop && <BackToTop />}\n    </div >\n  )\n}\n\nexport default Layout\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport Layout from \"../components/Layout/Layout\"\nimport { getTitle } from \"../utils/general\"\n\ninterface ProjectsProps {\n  data: {\n    allProjectsJson: {\n      edges: {\n        node: {\n          title: string\n          description: string\n          status: string\n          technologies: {\n            languages: string[]\n            libraries: string[]\n          }\n          links: {\n            documentation: string\n            repository: string\n            site: string\n          }\n          duration: {\n            start: string\n          }\n        }\n      }[]\n    }\n  }\n}\n\n// TODO: Hover to preview project if possible\nconst Projects = ({ data }: ProjectsProps) => {\n  const projects = data.allProjectsJson.edges\n  console.log(projects)\n\n  return (\n    <Layout pageTitle=\"My Projects\" tabTitle=\"Projects\">\n      {projects.map(({ node: project }) => {\n        return (\n          <div className=\"flex flex-col gap-2 mb-2 last:mb-0\">\n            <div className=\"flex justify-between items-center\">\n              <h2 className=\"m-0 xs:mb-4\">{project.title}</h2>\n              <div className=\"flex gap-3\">\n                {Object\n                  .entries(project.links)\n                  .filter(([_type, link]) => link)\n                  .map(([type, link]) => {\n                    return (\n                      <a target=\"_blank\" href={link} className=\"capitalize\">{type}</a>\n                    )\n                  })}\n              </div>\n            </div>\n            <div className=\"flex gap-2\">\n              {project.technologies.languages.map(l =>\n                <span className=\"rounded-sm py-1 px-2 bg-language\">{l}</span>\n              )}\n              {project.technologies.libraries && project.technologies.libraries.map(t =>\n                <span className=\"rounded-sm py-1 px-2 bg-language\">{t}</span>\n              )}\n            </div>\n            <p>{project.description}</p>\n          </div>\n        )\n      })\n      }\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allProjectsJson(\n      filter: {published: {eq: true}},\n      sort: {fields: [duration___start], order: DESC}\n    ) {\n      edges {\n        node {\n          title\n          description\n          status\n          technologies {\n            languages\n            libraries\n          }\n          links {\n            documentation\n            repository\n            site\n          }\n          duration {\n            start\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Projects"],"names":["useEffect","window","addEventListener","arrow","document","querySelector","scrollY","classList","remove","add","className","onClick","body","scrollTop","documentElement","size","repositoryUrl","contactIconClasses","join","href","Link","to","ContactLink","align","link","icon","tabTitle","pageTitle","pagination","tags","children","description","backToTop","useStaticQuery","site","siteMetadata","siteTitle","title","ThemeToggle","SEO","currentPage","numPages","projects","data","allProjectsJson","edges","console","log","map","project","node","Object","entries","links","filter","type","target","technologies","languages","l","libraries","t"],"sourceRoot":""}